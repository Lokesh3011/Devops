{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc0167a1d85d74894f6": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.10.10.0/24",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CloudformwerVPC"
          }
        ]
      }
    },
    "vpc67695b0c": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.31.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true"
      }
    },
    "subnet9cc6dcf7": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.16.0/20",
        "AvailabilityZone": "eu-central-1a",
        "VpcId": {
          "Ref": "vpc67695b0c"
        }
      }
    },
    "subnetdac9ed97": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.0.0/20",
        "AvailabilityZone": "eu-central-1c",
        "VpcId": {
          "Ref": "vpc67695b0c"
        }
      }
    },
    "subnet04f356cc231ae5630": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.10.10.0/24",
        "AvailabilityZone": "eu-central-1a",
        "VpcId": {
          "Ref": "vpc0167a1d85d74894f6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestCF"
          }
        ]
      }
    },
    "subnet42c6973f": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.32.0/20",
        "AvailabilityZone": "eu-central-1b",
        "VpcId": {
          "Ref": "vpc67695b0c"
        }
      }
    },
    "igw0ad2f5eee866fbd91": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestCF"
          }
        ]
      }
    },
    "igwa96b5ac1": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "dopt4b330120": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "eu-central-1.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "acl33a06f59": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc67695b0c"
        }
      }
    },
    "acl063e70f887b9018ab": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0167a1d85d74894f6"
        }
      }
    },
    "rtb0293350b02bab4032": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0167a1d85d74894f6"
        }
      }
    },
    "rtbf486329e": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc67695b0c"
        }
      }
    },
    "rtb0078c0c9e54f3cebb": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0167a1d85d74894f6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CloudformerVPCRouteTable"
          }
        ]
      }
    },
    "asgPythonASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          "eu-central-1a",
          "eu-central-1c",
          "eu-central-1b"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "EC2",
        "MaxSize": "2",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          {
            "Ref": "subnet9cc6dcf7"
          },
          {
            "Ref": "subnetdac9ed97"
          },
          {
            "Ref": "subnet42c6973f"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "lcPythonLC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ASG",
            "PropagateAtLaunch": true
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "lcPythonLC": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-0322eb54ec48f0d95",
        "InstanceType": "t2.micro",
        "KeyName": "Ubuntu",
        "IamInstanceProfile": "s3sampleapplicationec2",
        "SecurityGroups": [
          {
            "Ref": "sglaunchwizard5"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "SnapshotId": "snap-03724bf32a526dd0f",
              "VolumeSize": 8
            }
          }
        ]
      }
    },
    "instancei0886d4f43768fb821": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-034fffcc6a0063961",
        "InstanceType": "t2.micro",
        "KeyName": "AWS-Demo",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AWS-Demo"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet42c6973f"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.31.32.174",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              "sg-0657518567a11c9b2"
            ]
          }
        ]
      }
    },
    "instancei06a1d26ee8a3c7df2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "IamInstanceProfile": "arn:aws:iam::362573905540:instance-profile/s3sampleapplicationec2",
        "ImageId": "ami-086a09d5b9fa35dc7",
        "InstanceType": "t2.micro",
        "KeyName": "Ubuntu",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Python-Django"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet42c6973f"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.31.43.174",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sglaunchwizard5"
              }
            ]
          }
        ]
      }
    },
    "s3colibris3applicationsample3011": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "VersioningConfiguration": {
          "Status": "Suspended"
        }
      }
    },
    "sglaunchwizard3": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "launch-wizard-3 created 2018-12-02T22:56:29.380+05:30",
        "VpcId": {
          "Ref": "vpc67695b0c"
        }
      }
    },
    "sglaunchwizard5": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "launch-wizard-5 created 2018-12-08T15:17:08.447+05:30",
        "VpcId": {
          "Ref": "vpc67695b0c"
        }
      }
    },
    "sgAWSCloudFormerWebServerSecurityGroup9D29VNNC699B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTPS access via port 443",
        "VpcId": {
          "Ref": "vpc0167a1d85d74894f6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestCF"
          }
        ]
      }
    },
    "dbsgdefault": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "default"
      }
    },
    "scalingDecreaseGroupSize": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "PolicyType": "StepScaling",
        "StepAdjustments": [
          {
            "ScalingAdjustment": -1,
            "MetricIntervalUpperBound": 0.0
          }
        ],
        "AutoScalingGroupName": {
          "Ref": "asgPythonASG"
        }
      }
    },
    "scalingIncreaseGroupSize": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "PolicyType": "StepScaling",
        "StepAdjustments": [
          {
            "ScalingAdjustment": 1,
            "MetricIntervalLowerBound": 0.0
          }
        ],
        "AutoScalingGroupName": {
          "Ref": "asgPythonASG"
        }
      }
    },
    "alarmawsec2PythonASGCPUUtilization": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "50.0",
        "AlarmActions": [
          {
            "Ref": "scalingIncreaseGroupSize"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": "Python-ASG"
          }
        ]
      }
    },
    "alarmawsec2PythonASGHighCPUUtilization": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": "1",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Period": "300",
        "Statistic": "Average",
        "Threshold": "30.0",
        "AlarmActions": [
          {
            "Ref": "scalingDecreaseGroupSize"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": "Python-ASG"
          }
        ]
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl33a06f59"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl33a06f59"
        }
      }
    },
    "acl3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl063e70f887b9018ab"
        }
      }
    },
    "acl4": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl063e70f887b9018ab"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl33a06f59"
        },
        "SubnetId": {
          "Ref": "subnetdac9ed97"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl33a06f59"
        },
        "SubnetId": {
          "Ref": "subnet9cc6dcf7"
        }
      }
    },
    "subnetacl3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl33a06f59"
        },
        "SubnetId": {
          "Ref": "subnet42c6973f"
        }
      }
    },
    "subnetacl4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl063e70f887b9018ab"
        },
        "SubnetId": {
          "Ref": "subnet04f356cc231ae5630"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0167a1d85d74894f6"
        },
        "InternetGatewayId": {
          "Ref": "igw0ad2f5eee866fbd91"
        }
      }
    },
    "gw2": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc67695b0c"
        },
        "InternetGatewayId": {
          "Ref": "igwa96b5ac1"
        }
      }
    },
    "subnetroute3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb0078c0c9e54f3cebb"
        },
        "SubnetId": {
          "Ref": "subnet04f356cc231ae5630"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbf486329e"
        },
        "GatewayId": {
          "Ref": "igwa96b5ac1"
        }
      },
      "DependsOn": "gw2"
    },
    "route2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb0078c0c9e54f3cebb"
        },
        "GatewayId": {
          "Ref": "igw0ad2f5eee866fbd91"
        }
      },
      "DependsOn": "gw1"
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0167a1d85d74894f6"
        },
        "DhcpOptionsId": {
          "Ref": "dopt4b330120"
        }
      }
    },
    "dchpassoc2": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc67695b0c"
        },
        "DhcpOptionsId": {
          "Ref": "dopt4b330120"
        }
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard3"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard5"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard5"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAWSCloudFormerWebServerSecurityGroup9D29VNNC699B"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard3"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard5"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgAWSCloudFormerWebServerSecurityGroup9D29VNNC699B"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "Sample CFT"
}